{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","abel","value","background","onChange","event","console","log","target","rows","newText","toUpperCase","toLowerCase","trim","split","length","App","setMode","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.51045eb6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  // const [MyStyle,SetMyStyle]=useState({\r\n  //   color:'black',\r\n  //   backgroundColor:'white'\r\n  // })\r\n  \r\n  //  const clickGreen=()=>{\r\n  //    if(MyStyle==='green'){\r\n  //      SetMyStyle({\r\n  //       color:'white',\r\n  //       backgroundColor:'green'\r\n  //      })\r\n  //    }\r\n  //  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    \r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} my-3`}>\r\n        <div className=\"container-fluid \" >\r\n          <a className=\"navbar-brand\" href=\"/\">TextUtils</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-togtoggleModeclassNamegler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent \" >\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active \" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">About</a>\r\n              </li>\r\n              \r\n            \r\n            \r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"button\" id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n            </div>\r\n            \r\n          </div>\r\n\r\n          {/* <div className=\"form-check mx-2\" >\r\n              <input className=\"form-check-input btn btn-success\" type=\"radio\" name=\"flexRadioDefault\" id=\"btn1\" onClick={clickGreen}/>\r\n              <label className=\"form-check-label\"htmlFor=\"flexRadioDefault1\"  >\r\n                <strong>Green Mode</strong>\r\n                \r\n              </label>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-check mx-2\">\r\n              <input className=\"form-check-input btn btn-danger\" type=\"radio\" name=\"flexRadioDefault\" id=\"btn2\" />\r\n              <label className=\"form-check-label\"htmlFor=\"flexRadioDefault2\" >\r\n                <strong>Red Mode</strong>\r\n              </label>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-check mx-2\">\r\n              <input className=\"form-check-input btn btn-primary\" type=\"radio\" name=\"flexRadioDefault\" id=\"btn3\"/>\r\n              <label className=\"form-check-label\"htmlFor=\"flexRadioDefault1\" >\r\n              <strong>Blue Mode</strong>\r\n              </label>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div className=\"form-check mx-2\" >\r\n              <input className=\"form-check-input btn btn-dark\" type=\"radio\" name=\"flexRadioDefault\" id=\"btn4\" />\r\n              <label className=\"form-check-label\"htmlFor=\"flexRadioDefault2\" >\r\n              <strong>Black Mode</strong>\r\n              </label>\r\n            </div> */}\r\n        </div>\r\n      </nav>\r\n    \r\n  )\r\n}\r\n","\r\nimport React ,{useState}from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n//  const [MyStyle,SetMyStyle]=useState({\r\n//   color:'black',\r\n//   backgroundColor:'white'\r\n// })\r\n\r\n//  const clickGreen=()=>{\r\n//    if(MyStyle.backgroundColor==='white'){\r\n//      SetMyStyle({\r\n//       color:'white',\r\n//       backgroundColor:'green'\r\n//      })\r\n//    } \r\n//  }\r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleUpClick=()=>{\r\n      console.log(\"Upper Case was click\");\r\n      let newText=text.toUpperCase();\r\n      setText(newText);\r\n  }\r\n\r\n  const handleOnChange=(event)=>{\r\n    console.log(\"on Change\");\r\n    setText(event.target.value);\r\n}\r\n\r\nconst handleLoClick=()=>{\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n}\r\n\r\n  const [text,setText]= useState(\"Enter text here\");\r\n    \r\n  return (\r\n      <>\r\n\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}} >\r\n    <div className=\"container\" >\r\n        <h1>{props.heading}</h1>\r\n     \r\n        <div className=\"mb-3\"  style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <lable style={{color:props.mode==='dark'?'white':'black'}}abel htmlFor=\"mybox\" className=\"form-label\">Example textarea</lable>\r\n        <textarea className=\"form-control\" value={text}  style={{background:props.mode==='dark'?'grey':'white'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n                 \r\n\r\n\r\n\r\n        <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert to upperCase</button>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleLoClick} >Convert to lowerCase</button>\r\n\r\n    </div>\r\n\r\n    <div className=\"container my-3\"  style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{text.trim().split(/\\s+/).length}  words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n        <h2>preview</h2>\r\n        <p>{text}</p>\r\n\r\n\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport { useState } from 'react';\n\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const toggleMode=()=>{\n   if(mode==='light'){\n     setMode('dark');\n     document.body.style.backgroundColor=\"grey\";\n   }\n   else{\n     setMode('light');\n     document.body.style.backgroundColor=\"white\";\n   }\n\n  }\n\n  return (\n    <>\n               \n    <Navbar mode={mode} toggleMode={toggleMode}/>\n\n\n     \n     <div className=\"container my-3\">\n       <TextForm heading=\"Enter the text to analyze \"/>\n\n       {/* <About/> */}\n     </div>\n  \n    </>\n    \n\n\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}